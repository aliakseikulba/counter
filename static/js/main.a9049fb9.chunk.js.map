{"version":3,"sources":["components/Counter/Counter.module.css","components/Btn/Btn.module.css","components/Btn/Btn.tsx","components/Counter/Counter.tsx","components/Controller/Controller.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Btn","callback","isDisabled","name","onDisabled","btnClass","s","disabled","btn","className","onClick","Counter","useState","counter","setCounter","contentClass","contentFinal","content","wrapper","display","buttonsArea","Controller","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,+B,kBCAtLD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,SAAW,wB,+KCQ9CC,EAAM,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,KAE5BC,EAAaF,IACbG,EAAqB,UAAVD,EAAgBE,IAAEC,SAAgBD,IAAEE,KAErD,OACE,mCACE,wBAAQC,UAAWJ,EAAUK,QAAST,EAAUM,SAAUH,EAA1D,SAAuED,OCZvEQ,EAAU,WACd,IADoB,EAGQC,mBADP,GAFD,mBAGfC,EAHe,KAGNC,EAHM,KAKdC,EAAe,UAJJ,IAIIF,EAA0BP,IAAEU,aAAoBV,IAAEW,SAevE,OACE,sBAAKR,UAAWH,IAAEY,QAAlB,UACE,qBAAKT,UAAWH,IAAEa,QAAlB,SACE,qBAAKV,UAAWM,EAAhB,SAA+BF,MAEjC,sBAAKJ,UAAWH,IAAEc,YAAlB,UACE,cAAC,EAAD,CAAKnB,SApBY,WACrBa,GAAW,SAAAD,GAAO,OAAIA,EAAU,MAmBGX,WAdT,WAC1B,OAZe,IAYPW,GAa4DV,KAAM,QACtE,cAAC,EAAD,CAAKF,SAlBQ,WACjBa,EARmB,IAyBYZ,WAZT,WACtB,OAdmB,IAcXW,GAWoDV,KAAM,iBC3BhEkB,EAAa,WACjB,OACE,sBAAKZ,UAAWH,IAAEY,QAAlB,UACE,qBAAKT,UAAWH,IAAEa,UAClB,qBAAKV,UAAWH,IAAEc,YAAlB,SACE,cAAC,EAAD,CAAKnB,SAAU,aAAUC,WAAY,kBAAM,GAAOC,KAAM,cCQjDmB,MAZf,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCGOc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a9049fb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Counter_wrapper__3kFE5\",\"display\":\"Counter_display__2IUo3\",\"content\":\"Counter_content__3yIHH\",\"contentFinal\":\"Counter_contentFinal__3JBtA\",\"buttonsArea\":\"Counter_buttonsArea__21vEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Btn_btn__3iWZQ\",\"disabled\":\"Btn_disabled__2NUhn\"};","import React from 'react';\nimport s from './Btn.module.css';\n\ntype BtnPropsType = {\n  callback: () => void\n  isDisabled: () => boolean\n  name: string\n}\n\nconst Btn = ({callback, isDisabled, name}: BtnPropsType) => {\n\n  const onDisabled = isDisabled();\n  const btnClass = onDisabled ? `${s.disabled}` : `${s.btn}`;\n\n  return (\n    <>\n      <button className={btnClass} onClick={callback} disabled={onDisabled}>{name}</button>\n    </>\n  );\n};\n\nexport {Btn};","import React, {useState} from 'react';\nimport s from './Counter.module.css';\nimport {Btn} from '../Btn/Btn';\n\nconst Counter = () => {\n  const maxValue = 5;\n  const initialValue = 0;\n  let [counter, setCounter] = useState<number>(initialValue);\n\n  const contentClass = counter === maxValue ? `${s.contentFinal}` : `${s.content}`;\n  const incrementValue = () => {\n    setCounter(counter => counter + 1);\n  };\n  const resetValue = () => {\n    setCounter(initialValue);\n  };\n  const disableIncrementBtn = () => {\n    return (counter === maxValue);\n  };\n  const disableResetBtn = () => {\n    return (counter === initialValue);\n  };\n\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.display}>\n        <div className={contentClass}>{counter}</div>\n      </div>\n      <div className={s.buttonsArea}>\n        <Btn callback={incrementValue} isDisabled={disableIncrementBtn} name={'Inc'}/>\n        <Btn callback={resetValue} isDisabled={disableResetBtn} name={'Reset'}/>\n      </div>\n    </div>\n  );\n};\n\nexport {Counter};","import React from 'react';\nimport s from './../Counter/Counter.module.css'\nimport {Btn} from '../Btn/Btn';\n\nconst Controller = () => {\n  return (\n    <div className={s.wrapper}>\n      <div className={s.display}></div>\n      <div className={s.buttonsArea}>\n        <Btn callback={() => {}} isDisabled={() => false} name={'Set'}/>\n      </div>\n    </div>\n  );\n};\n\nexport {Controller};","import React from 'react';\nimport './App.css';\nimport {Counter} from './components/Counter/Counter';\nimport {Controller} from './components/Controller/Controller';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">custom counter</h1>\n      <div className=\"content\">\n        <Controller/>\n        <Counter/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}